@page "/createAuction"
@using System.Text
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@inject NotificationService NotificationService
@inject HttpClient HttpClient

<PageTitle>Create an Auction</PageTitle>

<RadzenSteps Change=@OnChange>
    <Steps>
        <RadzenStepsItem Text="Informações Leilão" Disabled = "@(currentStep > 199)">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">1. Preencha as Informações para continuar</RadzenText>
            <RadzenRow Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 400px; overflow: hidden; background: var(--rz-primary-light);">
                <RadzenColumn Size="12" SizeMD="6">
                    <div Class="rz-p-0 rz-p-md-12">
                        <RadzenRow Gap="1rem">
                            <RadzenColumn Size="12" SizeSM="10">
                                <RadzenTemplateForm TItem="leilaoAux" Data=@leilao>
                                    <RadzenStack>
                                        <RadzenFormField Text="Titulo" Variant=@variant Style="width: 300px;">
                                            <ChildContent>
                                                <RadzenTextBox Name="Titulo" @bind-Value="@leilao.titulo" Style="width: 500px;"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Titulo" Text="Required Field."/>
                                            </Helper>
                                        </RadzenFormField>

                                        <RadzenFormField Text="Data Final" Variant=@variant Style="width: 300px;">
                                            <ChildContent>
                                                <RadzenDatePicker Name="Data Final" @bind-Value="@leilao.dataFinal" ShowTime="true" ShowSeconds="true" HoursStep="1.5" MinutesStep="5" SecondsStep="10" DateFormat="MM/dd/yyyy HH:mm:ss"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Data Final" Text="Required Field."/>
                                                <RadzenCustomValidator Component="Data Final" Validator="@(() => validaDataFinal(leilao.dataFinal))" Text="Minimo 2 horas depois da hora atual" Popup=@leilao.dataVal/>
                                            </Helper>
                                        </RadzenFormField>

                                        <RadzenFormField Text="Categorias" Variant="@variant" Style="width: 300px;">
                                            <Start>
                                                <RadzenIcon Icon="folder_open"/>
                                            </Start>
                                            <ChildContent>
                                                <RadzenDropDown Name="Pay" Multiple="false" Placeholder="Select..." TValue="string" Data="getAllCategorias()" @bind-Value="@leilao.Categoria"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Pay" Text="Required Field."/>
                                            </Helper>
                                        </RadzenFormField>

                                    </RadzenStack>
                                </RadzenTemplateForm>
                            </RadzenColumn>
                        </RadzenRow>
                    </div>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStepsItem>
        <RadzenStepsItem Text="Artigos" Disabled="@(leilao.titulo == "" || leilao.dataFinal <= DateTime.Now.AddHours(2) || leilao.Categoria == "" || currentStep > 199)">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">2. Adicione os artigos para continuar</RadzenText>
            <RadzenRow Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 400px; overflow: hidden; background: var(--rz-primary-light);">
                <RadzenColumn Size="12" SizeMD="6">
                    <div Class="rz-p-0 rz-p-md-12">
                        <RadzenRow Gap="1rem">
                            <RadzenColumn Size="12" SizeSM="10">
                                <RadzenTemplateForm TItem="artigoAux" Data=@artigo Submit="@OnClick">
                                    <RadzenStack>
                                        @* <RadzenFormField Text="Foto do Artigo" Variant=@variant Style="width: 300px;">
                                            <RadzenCard>
                                                <RadzenFileInput @bind-FileName=@artigo.filename TValue="string" class="w-100" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})" Change=@HandleFileChange/>
                                            </RadzenCard>
                                        </RadzenFormField> *@
                                        <RadzenFormField Text="Designação" Variant=@variant Style="width: 300px;">
                                            <ChildContent>
                                                <RadzenTextBox Name="Designação" @bind-Value="@artigo.designacao" Style="width: 500px;"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Designação" Text="Required Field."/>
                                            </Helper>
                                        </RadzenFormField>

                                        <RadzenFormField Text="Caracteristicas" Variant=@variant Style="width: 300px;">
                                            <ChildContent>
                                                <RadzenTextBox Name="Caracteristicas" @bind-Value="@artigo.caracteristicas" Style="width: 500px;"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Caracteristicas" Text="Required Field."/>
                                            </Helper>
                                        </RadzenFormField>

                                        <RadzenFormField Text="Descrição" Variant=@variant Style="width: 300px;">
                                            <ChildContent>
                                                <RadzenTextBox Name="Descrição" @bind-Value="@artigo.descricao" Style="width: 500px;"/>
                                            </ChildContent>
                                            <Helper>
                                                <RadzenRequiredValidator Component="Descrição" Text="Required Field."/>
                                            </Helper>
                                        </RadzenFormField>

                                        <RadzenButton ButtonType="ButtonType.Submit" Text="Add New" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" Style="width: 200px;" />
                                    </RadzenStack>
                                </RadzenTemplateForm>
                            </RadzenColumn>
                        </RadzenRow>
                    </div>
                </RadzenColumn>
            </RadzenRow>
            <RadzenDataGrid ColumnWidth="200px" Data="@listaArtigos" TItem="artigoAux">
                <Columns>
                    <RadzenDataGridColumn TItem="artigoAux" Property="designacao" Title="designacao" Width="140px" />
                    <RadzenDataGridColumn TItem="artigoAux" Property="caracteristicas" Title="caracteristicas" />
                    <RadzenDataGridColumn TItem="artigoAux" Property="descricao" Title="descricao" />
                    <RadzenDataGridColumn TItem="artigoAux" Width="50px">
                        <Template Context="artigo">
                            <RadzenButton Click="@(() => RemoverArtigo(@artigo.id))" Icon="delete" ButtonStyle="ButtonStyle.Danger" />
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </RadzenStepsItem>
        <RadzenStepsItem Text="Detalhes do Leilão" Disabled="@(listaArtigos.Count() == 0 || currentStep > 199)" NextText="Create" >
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H3" class="rz-my-6">Detalhes Finais do Leilão</RadzenText>
            <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-p-8" style="width: 500px; height: 450px; margin: auto; border-radius: 30px; margin-bottom: 40px;">
                <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-light"><strong>Auction Information</strong></RadzenText>
                <RadzenRow RowGap="0">
                    <RadzenColumn SizeSM="12">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Título</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@leilao.titulo</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Categoria</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@leilao.Categoria</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Data Final</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@leilao.dataFinal.ToString()</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Comitente</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@CurrentUser.getCurrentUser().getEmail()</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Valor Abertura</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"> <b>Espera avaliação de um avaliador.</b> </RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Valor Base</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"> <b>Espera avaliação de um avaliador.</b> </RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Valor Minimo</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"> <b>Espera avaliação de um avaliador. </b> </RadzenText>
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
            <RadzenDataGrid ColumnWidth="200px" Data="@listaArtigos" TItem="artigoAux">
                <Columns>
                    <RadzenDataGridColumn TItem="artigoAux" Property="designacao" Title="Designacão" Width="140px" />
                    <RadzenDataGridColumn TItem="artigoAux" Property="caracteristicas" Title="Características" />
                    <RadzenDataGridColumn TItem="artigoAux" Property="descricao" Title="Descrição" />
                </Columns>
            </RadzenDataGrid>
        </RadzenStepsItem>
        <RadzenStepsItem Disabled="@(currentStep < 99)">
            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;">Auction Created with Success!</RadzenText>
        </RadzenStepsItem>
    </Steps>
</RadzenSteps>


@code {
    Variant variant = Variant.Outlined;

    ILeilumLN ln = new LeilumLNFacade();

    int currentStep = 0;

    class leilaoAux
    {
        public string? titulo { get; set; }
        public DateTime dataFinal { get; set; }
        public string Categoria { get; set; }

        public bool dataVal { get; set; }

        public leilaoAux()
        {
            this.titulo = "";
            this.Categoria = "";
        }
    }

    class artigoAux
    {
        @* public string? file { get; set; } *@
        public string? filename { get; set;}
        @* public long? fileSize { get; set;} *@
        public int id { get; set;}
        public string? designacao { get; set; }
        public string? caracteristicas { get; set; }
        public string? descricao { get; set; }

        public artigoAux()
        {
            filename = "";
            this.id = 0;
            this.designacao = "";
            this.caracteristicas = "";
            this.descricao = "";
        }
        
    }
    leilaoAux leilao = new leilaoAux();

    artigoAux artigo = new artigoAux();

    IEnumerable<artigoAux> listaArtigos = new List<artigoAux>();

    Utilizador user = CurrentUser.getCurrentUser();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    void OnChange(int index)
    {
        if (index == 0) {
            currentStep = 0;
        }
        if (index == 1) {
            currentStep = 25;
        }
        if (index == 2) {
            currentStep = 99;
        }
        if (index == 3) {
            currentStep = 200;
            criaLeilao();
        }
    }

    bool validaDataFinal(DateTime data)
    {
        if (data != null)
        {
            DateTime dataAtual = DateTime.Now;
            
            if (data >= dataAtual.AddHours(2))
            {
                return true;
            }
        }
        return false;
    }

    public ICollection<string> getAllCategorias(){
        ICollection<string> categorias = new List<string>();
        List<Categoria> lista = this.ln.GetAllCategorias();

        foreach (Categoria c in lista){
            categorias.Add(c.getDesignacao());
        }

        return categorias;
    }

    private void OnClick()
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Artigo adicionado com sucesso!" });
        adicionaListaArtigos();
        artigo = new artigoAux();
    }

    private async void adicionaListaArtigos(){
        this.artigo.id = listaArtigos.Count() + 1;
        listaArtigos = listaArtigos.Append<artigoAux>(artigo);
    }

    void RemoverArtigo(int id)
    {
        int i = 1;
        listaArtigos = listaArtigos.Where(artigo => artigo.id != id).ToList();

        foreach (artigoAux a in listaArtigos) {
            a.id = i;
            i++;
        }
    }

    private void criaLeilao() {
        int idLote = this.ln.quantidadeLotes() + 1;

        List<Artigo> lArtigos = new List<Artigo>();

        // cria a lista de artigos do lote
        foreach(artigoAux a in this.listaArtigos) {
            int id = this.ln.quantidadeArtigos() + 1;
            string designacao = a.designacao;
            string caracteristicas = a.caracteristicas;
            string descricao = a.descricao;
            Artigo aux = new Artigo(id,designacao,caracteristicas,descricao,idLote);
            lArtigos.Add(aux);
        }
        
        // cria o lote
        Lote lote = new Lote(idLote,this.user,null,null,lArtigos);

        // cria o leilao
        int idLeilao = this.ln.quantidadeLeiloes() + 1;
        string titulo = this.leilao.titulo;
        DateTime dataFinal = this.leilao.dataFinal;
        double valorAbertura = 0;
        double valorBase = 0;
        double valorMinimo = 0;
        double valorAtual = 0;
        Categoria categoria = ln.GetCategoriaByDesignacao(this.leilao.Categoria);
        Leilao leilao = new Leilao(idLeilao,titulo,dataFinal,valorAbertura,valorBase,valorMinimo,valorAtual,2,null,user,lote,categoria);

        this.ln.adicionaLeilao(leilao);
    }
}