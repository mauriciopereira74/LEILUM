@page "/profile"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@inject NotificationService NotificationService

@using leilum.Data;

<PageTitle>Profile</PageTitle>

<div class="container">
    <h3>Profile</h3>

    @if (currentUser != null)
    {
        <RadzenCard Class="rz-my-12 rz-mx-auto" Style="width: 500px">
            <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center" Gap="1rem" Class="rz-p-4">
                <RadzenImage Path="@currentUser.getFotoPerfil()" Style="width: 100px; height: 100px; border-radius: 50%;" />
                <RadzenStack Gap="0" Style="text-align: center; margin-top: -10px;">
                    <RadzenText TextStyle="TextStyle.Body1">
                        <b>@currentUser.getNome()</b>
                    </RadzenText>
                </RadzenStack>
            </RadzenStack>
            <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
                <RadzenText TextStyle="TextStyle.H6" TextAlign="TextAlign.Center" class="rz-color-on-primary-light"><strong>Account Information</strong></RadzenText>
                <RadzenRow RowGap="0">
                    <RadzenColumn SizeSM="12">
                        @if (!isEditMode)
                        {
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Email</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getEmail()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Password</b></RadzenText>
                            <RadzenStack Orientation="Orientation.Horizontal">
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light" Text="@currentUser.getPassword()" Visible="@isPassVisible"/>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light" Text="********" Visible="@(!isPassVisible)"/>
                                <RadzenButton Icon="@(isPassVisible ? "visibility" : "visibility_off")" Click="passVisible" Style="color: #ffffff; outline: #000000;" Variant="Variant.Text" Size="ButtonSize.Small"/>
                            </RadzenStack>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Contact</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getContacto()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Address</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getMorada()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Birth Date</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getDataNascimentoSTR()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Nationality</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getNacionalidade()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>NIF (Tax Number)</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getContribuinte()</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Payment Method</b></RadzenText>
                            @if (currentUser.getMetodoPagamento() == configGerais.Check)
                            {
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>Check</b></RadzenText>
                            }

                            @if (currentUser.getMetodoPagamento() == configGerais.BankTransfer)
                            {
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>Bank Transfer</b></RadzenText>
                            }

                            @if (currentUser.getMetodoPagamento() == configGerais.Cash)
                            {
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>Cash</b></RadzenText>
                            }

                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>IBAN (International Bank Account Number)</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@currentUser.getIban()</b></RadzenText>
                        }
                        else
                        {
                            <RadzenTemplateForm TItem="Utilizador" Data="@currentUser" Submit="@SaveChanges" InvalidSubmit="@invalidSubmit">
                                <RadzenStack Orientation="Orientation.Vertical">
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Profile Picture</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <RadzenCard>
                                            <RadzenUpload Auto="false" Change="args => UploadChange(args)" @ref="upload" Accept="image/*" Url=@($"upload/{"ProfilePictures"}/{newNif + "-ProfilePic"}")></RadzenUpload>
                                        </RadzenCard>
                                    </RadzenFormField>
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Name</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenTextBox Name="Name" @bind-Value="@newName"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Name" Text="Required Field."/>
                                        </Helper>
                                    </RadzenFormField>
                                    
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Password</b></RadzenText>
                                    <RadzenFormField Variant="@variant">
                                        <ChildContent>
                                            <RadzenStack Orientation="Orientation.Horizontal">
                                                <RadzenTextBox Name="Password" @bind-Value="@newPass" Visible="@(!isPassVisible)"/>
                                                <RadzenPassword Name="Password" @bind-Value="@newPass" Visible="isPassVisible"/>
                                                <RadzenButton Icon="@(isPassVisible ? "visibility" : "visibility_off")" Click="passVisible" Style="color: #ffffff; outline: #000000;" Variant="Variant.Text" Size="ButtonSize.Small"/>
                                            </RadzenStack>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Password" Text="Required Field."/>
                                        </Helper>
                                        <End>
                                            <RadzenButton Icon="@(isPassVisible ? "visibility" : "visibility_off")" Click="passVisible" Variant="Variant.Text" Size="ButtonSize.Small"/>
                                        </End>
                                    </RadzenFormField>
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Contact</b></RadzenText>
                                    <RadzenFormField Variant="@variant">
                                        <ChildContent>
                                            <RadzenTextBox Name="Contac" @bind-Value="@newContact"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Contac" Text="Required Field."/>
                                            <RadzenRegexValidator Component="Contac" Pattern="^(\+\d{1,4}\s?)?(\d{9,15})$" Text="Insert a valid phone number."/>
                                        </Helper>
                                    </RadzenFormField>
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Address</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenTextBox Name="Morada" @bind-Value="@newAddress"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Morada" Text="Required Field."/>
                                        </Helper>
                                    </RadzenFormField>
                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Birth Date</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenDatePicker Name="DataNascimento" @bind-Value="@newDate" DateFormat="MM/dd/yyyy"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="DataNascimento" Text="Required Field."/>
                                            <RadzenCustomValidator Component="DataNascimento" Validator="@(() => idadeValidata(newDate))" Text="You must be at least 18 years."/>
                                        </Helper>
                                    </RadzenFormField>

                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Nacionality</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenTextBox Name="Nacionalidade" @bind-Value="@newNaci"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Nacionalidade" Text="Required Field."/>
                                        </Helper>
                                    </RadzenFormField>

                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>NIF (Tax Number)</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenNumeric Name="NIF" ShowUpDown="false" @bind-Value=@newNif Placeholder="Enter or clear value" InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Enter value" } })"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="NIF" Text="Required Field."/>
                                            <RadzenCustomValidator Component="NIF" Validator="@(() => validNif(newNif))" Text="Already exists an Account with this NIF."/>
                                            <RadzenRegexValidator Component="NIF" Text="NIF must be 9 digits." Pattern="\d{9}" Style="position: absolute"/>
                                        </Helper>
                                    </RadzenFormField>

                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>Payment Method</b></RadzenText>
                                    <RadzenFormField Variant="@variant">
                                        <Start>
                                            <RadzenIcon Icon="credit_card"/>
                                        </Start>
                                        <ChildContent>
                                            <RadzenDropDown Name="Pay" Multiple="false" Placeholder="Select..." TValue="string" Data="payMethod" @bind-Value="@auxpay"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Pay" Text="Required Field."/>
                                        </Helper>
                                    </RadzenFormField>

                                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 rz-font-weight-bold" style="color: #000;"><b>IBAN (Internacional Bank Account Number)</b></RadzenText>
                                    <RadzenFormField Variant=@variant>
                                        <ChildContent>
                                            <RadzenTextBox Name="Bank" @bind-Value="@newIban"/>
                                        </ChildContent>
                                        <Helper>
                                            <RadzenRequiredValidator Component="Bank" Text="Required Field."/>
                                        </Helper>
                                    </RadzenFormField>
                                    <RadzenButton ButtonType="ButtonType.Submit" Text="Submit Changes"/>
                                </RadzenStack>
                            </RadzenTemplateForm>
                        }
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
            <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.End" Gap="0">
                @if (isEditMode)
                {   
                    <RadzenButton Variant="Variant.Text" Text="Go Back (Without saving)" Click="ToggleEditMode" />
                }
                else
                {
                    <RadzenButton Variant="Variant.Text" Text="Edit Profile" Click="ToggleEditMode" />
                }
            </RadzenStack>
        </RadzenCard>
    }
    else
    {
        <p>Loading profile...</p>
    }
</div>

<style>
    h3 {
        text-align: center;
        font-size: 24px; /* Ajuste o tamanho da fonte conforme necessário */
        font-weight: bold;
    }
    .custom-account-card {
        background-color: #001F3F !important; /* Substitua pela cor desejada */
        color: white;
    }
</style>

@code {
    Variant variant = Variant.Outlined;
    ILeilumLN leilumF = new LeilumLNFacade();
    Utilizador currentUser;
    Utilizador editUser;
    bool isEditMode = false;
    RadzenUpload upload;
    
    
    string? newFoto;
    string? newName;
    string newPass = "";
    string? newContact;
    string? auxpay = "";
    string? newAddress;
    DateTime newDate;

    string? newNaci;

    int newNif;
    int newPag;
    string extension;

    string? newIban;

    bool isPassVisible = false;
    ICollection<string> payMethod = new List<string>()
    {
        "Check", "Bank Transfer", "Cash"
    };
    
    void UploadChange(UploadChangeEventArgs args)
    {
        foreach (var file in args.Files)
        {
            extension = file.Name.Split(".")[1];
        }
    }
    
    
    public void passVisible()
    {
        isPassVisible = !isPassVisible;
    }
    
    bool validNif(int nif)
    {
        if (!nif.Equals(currentUser.getContribuinte()))
        {
            return !leilumF.existsNIF(nif);
        } else return true;
    }

    bool idadeValidata(DateTime data)
    {
        if (data != null)
        {
            DateTime dataAtual = DateTime.Now;

            int idade = dataAtual.Year - data.Year;
            
            if (data.Date > dataAtual.AddYears(-idade))
            {
                idade--;
            }

            return idade >= 18;
        }
        return true;
    }
    
    protected override async Task OnInitializedAsync()
    {
        currentUser = CurrentUser.getCurrentUser();
        
        if (currentUser != null)
        {
            newName = currentUser.getNome();
            newPass = currentUser.getPassword();
            newContact = currentUser.getContacto();
            newAddress = currentUser.getMorada();
            newDate = new DateTime(currentUser.getDataNascimento().Year, currentUser.getDataNascimento().Month, currentUser.getDataNascimento().Day);
            newNaci = currentUser.getNacionalidade();
            newNif = currentUser.getContribuinte();
            newPag = currentUser.getMetodoPagamento();
            newIban = currentUser.getIban();
        }

        await Task.Delay(1000);
    }

    async void SaveChanges()
    {
        switch (auxpay)
        {
            case "Check":
                newPag = configGerais.Check;
                break;
            case "Bank Transfer":
                newPag = configGerais.BankTransfer;
                break;
            case "Cash":
                newPag = configGerais.Cash;
                break;
        }
        
        if (upload.HasValue)
        {
            await upload.Upload();
            string file = "/ProfilePictures/" + newNif + "-ProfilePic." + extension;
            currentUser.setFotoPerfil(file);
        }
        
        currentUser.setNome(newName);
        currentUser.setPassword(newPass);
        currentUser.setContacto(newContact);
        currentUser.setMorada(newAddress);
        currentUser.SetDataNascimento(newDate);
        currentUser.setNacionalidade(newNaci);
        currentUser.setContribuinte(newNif);
        currentUser.setMetodoPagamento(newPag);
        currentUser.setIban(newIban);

        ILeilumLN ef = new LeilumLNFacade();
        ef.updateUtilizador(currentUser);
        isEditMode = false;
        
        StateHasChanged();
    }
    
    void ToggleEditMode()
    {
        isEditMode = !isEditMode;
    }
    
    private async void invalidSubmit()
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Invalid Information. Ensure you filled all the corresponding fields with valid information!", Detail = "Please try again!", Duration = 4000 });
    }
    
}

<style>
    .custom-datepicker input {
        background-color: transparent !important;
        border: none;
        color: white !important;
        font-weight: bold;
    }
</style>