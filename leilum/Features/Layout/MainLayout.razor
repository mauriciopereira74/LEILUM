@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<RadzenLayout>
    <RadzenHeader>
       <div class="header-content">
            <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
            <RadzenLabel>
                <div>
                    <img src="/images/logo.png" alt="logo" />
                </div>
            </RadzenLabel>
            <RadzenProfileMenu Click="@ProfileMenu">
                <Template>
                    <AuthorizeView>
                        <Authorized>
                            <div class="profile-container">
                                <img class="profile-image" src="@getPhoto()" alt="avatar" Style="width: 50px; height: 50px; border-radius: 50%; margin-right: 10px" />  
                                <span class="profile-name">@getName() </span>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <img class="profile-image" src="/images/no.png" alt="avatar" Style="width: 50px; height: 50px; border-radius: 50%; margin-right: 10px" />
                        </NotAuthorized>
                    </AuthorizeView>
                </Template>
                <ChildContent>
                    <AuthorizeView>
                        <Authorized>
                            <RadzenProfileMenuItem Text="Profile" Icon="face"/>
                            <RadzenProfileMenuItem Text="Logout" Icon="logout"/>
                        </Authorized>
                        <NotAuthorized>
                            <RadzenProfileMenuItem Text="Login" Icon="login"/>
                        </NotAuthorized>
                    </AuthorizeView>
                </ChildContent>
            </RadzenProfileMenu>
        </div>
    </RadzenHeader>
    <RadzenSidebar Responsive="false" Style="width: max-content">
        <RadzenPanelMenu DisplayStyle="@(sidebarExpanded ? MenuItemDisplayStyle.IconAndText : MenuItemDisplayStyle.Icon)" ShowArrow="false">
            <AuthorizeView>
                <Authorized>
                    <RadzenPanelMenuItem Text="Overview" Icon="home" Click="@(() => NavigateTo("/"))"/>
                    <RadzenPanelMenuItem Text="Suggest" Icon="grade" Click="@(() => NavigateTo("/suggest"))"/>
                    <RadzenPanelMenuItem Text="History" Icon="history" Click="@(() => NavigateTo("/history"))"/>
                    <RadzenPanelMenuItem Text="Notifications" Icon="feedback" Click="@(() => NavigateTo("/notifications"))"/>
                </Authorized>
                <NotAuthorized>
                    <RadzenPanelMenuItem Text="Overview" Icon="home" Click="@(() => NavigateTo("/"))"/>
                    <RadzenPanelMenuItem Text="Login" Icon="login" class="login" Click="@(() => NavigateTo("/login"))"/>
                </NotAuthorized>
            </AuthorizeView>
        </RadzenPanelMenu>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            <RadzenDataList WrapItems="true" AllowPaging="false" Data="@leiloes" TItem="Leilao">
                <Template Context="leilao">
                    <RadzenCard Style="width:100px; border-radius: 10%">
                        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center">
                            <RadzenImage Path="@leilao.getLote().getImgPath()" Style="width: 150px; height: 150px; border-radius: 10%" />
                            <RadzenStack Gap="0" Style="text-align: center;">
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0 text-center">Titulo</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1"><b>@leilao.getTitulo()</b></RadzenText>
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0 text-center">Categoria</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1"><b>@leilao.getCategoria().getDesignacao()</b></RadzenText>
                            </RadzenStack>
                        </RadzenStack>
                        <hr style="border: none; background-color: rgba(0,0,0,.2); height: 1px; margin: 1rem 0;" />
                        <RadzenRow>
                            <RadzenColumn Size="8" Class="rz-text-truncate">
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Data Fim</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1"><b>@leilao.getDataFinal()</b></RadzenText>
                                @* <b>@leilao.getNrLeilao()</b> *@
                            </RadzenColumn>
                            <RadzenColumn Size="4" Class="rz-text-align-end">
                                <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", leilao.getvalorAtual())}") />
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                </Template>
            </RadzenDataList>
        </div>
    </RadzenBody>
</RadzenLayout>
<RadzenPager ShowPagingSummary="true" PagingSummaryFormat="@pagingSummaryFormat" HorizontalAlign="HorizontalAlign.Right" Count="count" PageSize="@pageSize" PageNumbersCount="5" />


<style>
  .text-center {
    display: flex;
    align-items: center;
    justify-content: space-around;
  }
</style>

@code {
    bool sidebarExpanded = true;
    static ILeilumLN ln = new LeilumLNFacade();
    IEnumerable<Leilao> leiloes = ln.getLeiloesEmCurso();
    Utilizador? currentUser = CurrentUser.getCurrentUser();
    string pagingSummaryFormat = "Displaying page {0} of {1} (total {2} records)";
    int pageSize = 2;
    int count;

    /*
    void PageChanged(PagerEventArgs args)
    {
        leiloes = getLeiloes(args.Skip, args.Top);
    }

     IEnumerable<Leilao> getLeiloes(int skip, int take)
    {
        return dbContext.Orders.Include("Customer").Include("Employee").Skip(skip).Take(take).ToList();
    }
    */

    string getEmail()
    {
        return currentUser != null ? currentUser.getEmail() : string.Empty;
    }

    string getName()
    {
        return currentUser != null ? currentUser.getNome() : string.Empty;
    }

    string getPhoto()
    {
        return currentUser != null ? currentUser.getFotoPerfil() : string.Empty;
    }

    void NavigateTo(string url)
    {
        navManager.NavigateTo(url);
    }

    public async void ProfileMenu(RadzenProfileMenuItem item)
    {   
        if(item.Text.Equals("Logout")){
            var customAuthStateProvider = (auth.AuthStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(null);
            navManager.NavigateTo("/", true);
            CurrentUser.setCurrentUser(null);
        }
        else if(item.Text.Equals("Profile")){
            navManager.NavigateTo("/profile", true);
        }
        else if(item.Text.Equals("Login")){
            navManager.NavigateTo("/login", true);
        }
    }
}