@layout LoginLayout
@page "/login"
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<RadzenRow Gap="0" Class="rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 800px; overflow: hidden;">
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-text-align-center rz-p-12 custom-login-column" >
            <RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white rz-mb-6">Bem vindo!</RadzenText>
            <RadzenStack AlignItems="AlignItems.Center" Class="rz-mx-auto rz-my-12">

                <RadzenImage Path="/images/logo.png" Style="width: 15rem;" />

            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-p-12">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H2" Class="rz-mb-6">
                Login
            </RadzenText>
            <RadzenTemplateForm Data=@("SimpleLogin")>
                <RadzenLogin AllowResetPassword="false" Username=@email Password=@password AllowRememberMe="false"
                        LoginText="LogIn" UserText="Email" PasswordText="Password"
                        UserRequired="Email necessario"
                        PasswordRequired="Password necessaria"
                        RegisterText="Criar Conta"
                        RegisterMessageText="Ainda não tens conta?"
                        Login="@(args => HandleLogin(args))"
                        Register="@(args => HandleCreate())"/>
            </RadzenTemplateForm>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

<style>
    .custom-login-column {
        height: 100%;
        background-color: #001F3F !important; /* Substitua pela cor desejada */
        color: white;
    }
</style>

@code {
    private string?  email;
    private string? password;

    private async Task HandleLogin(LoginArgs args)
    {
        ILeilumLN ef = new LeilumLNFacade();
        if (ef.existsEmail(args.Username)) // utilizador existe?
        {
            Utilizador user = ef.getUtilizadorWithEmail(args.Username);
            if (user.getPassword().Equals(args.Password)) // a palavra passe é correcta?
            {
                CurrentUser.setCurrentUser(user); // serve para as outras páginas saberem quem é que está na sessão

                var customAuthStateProvider = (AuthStateProvider)authStateProvider;
                await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                {
                    email = user.getEmail(),
                    tipo = user.getTipoUtilizador().ToString()
                });
                NavigationManager.NavigateTo("/", true);
            }
            else
            {
                //await ShowBusyDialog(true, "A palavra passe é incorreta.");
            }
        }
        else
        {
            //await ShowBusyDialog(true, "Utilizador não encontrado.");
        }
    }


    private void HandleCreate()
    {
        NavigationManager.NavigateTo("/create", true);
    }
}